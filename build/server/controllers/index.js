// Generated by CoffeeScript 1.8.0
var Contact, CozyInstance, Event, Tag, User, async;

async = require('async');

CozyInstance = require('../models/cozy_instance');

Tag = require('../models/tag');

Event = require('../models/event');

Contact = require('../models/contact');

User = require('../models/user');

module.exports.index = function(req, res) {
  return async.parallel([
    function(cb) {
      return Contact.all(function(err, contacts) {
        var contact, index, _i, _len;
        if (err) {
          return cb(err);
        }
        for (index = _i = 0, _len = contacts.length; _i < _len; index = ++_i) {
          contact = contacts[index];
          contacts[index] = contact.asNameAndEmails();
        }
        return cb(null, contacts);
      });
    }, Tag.all, Event.all, function(cb) {
      return CozyInstance.getLocale(function(err, locale) {
        if (err) {
          console.log(err);
        }
        return cb(null, locale);
      });
    }
  ], function(err, results) {
    var contacts, events, locale, tags;
    if (err) {
      return res.send({
        error: 'Server error occurred while retrieving data',
        stack: err.stack
      });
    } else {
      contacts = results[0], tags = results[1], events = results[2], locale = results[3];
      return res.render('index.jade', {
        imports: "window.locale = \"" + locale + "\";\nwindow.inittags = " + (JSON.stringify(tags)) + ";\nwindow.initevents = " + (JSON.stringify(events)) + ";\nwindow.initcontacts = " + (JSON.stringify(contacts)) + ";"
      });
    }
  });
};

module.exports.userTimezone = function(req, res) {
  if (req.query.keys !== "timezone") {
    return res.send(403, "keys not exposed");
  } else {
    return res.send(User.timezone);
  }
};
